排序算法的稳定性：如果待排序的序列中存在相等的元素，经过排序之后，相等元素之间原有的先后顺序不变

比如 有一组数据2，9，3，4，8，3，按照大小排序之后就是2，3，3，4，8，9。这组数据中有两个3.经过某种排序算法之后，如果两个3的前后
顺序没有改变，就吧这种算法叫做稳定排序算法；如果前后顺序发生变化，那对应的排序算法就叫做不稳定的排序算法



排序算法原地排序：指的是空间复杂度是O(1)的排序算法。


冒泡排序：原地排序，稳定排序

// 冒泡排序，a 表示数组，n 表示数组大小
public void bubbleSort(int[] a, int n) {
  if (n <= 1) return;
 
 for (int i = 0; i < n; ++i) {
    // 提前退出冒泡循环的标志位
    boolean flag = false;
    for (int j = 0; j < n - i - 1; ++j) {
      if (a[j] > a[j+1]) { // 交换
        int tmp = a[j];
        a[j] = a[j+1];
        a[j+1] = tmp;
        flag = true;  // 表示有数据交换      
      }
    }
    if (!flag) break;  // 没有数据交换，提前退出
  }
}
时间复杂度O(n^2)

插入排序
function insertSort(a, n){
		if (n<=1) {
			return false;
		}

		for (var i = 1; i < n ; i++) {
			var value = a[i];
			var j = i - 1;
			for (; j>=0; --j) {
				if (a[j] > value) {
					a[j+1] = a[j]
				} else {
					break;
				}
			}
			a[j+1] = value;
		}

		return a;
	}


时间复杂度O(n^2)

选择排序




三种方式的差别
	是否原地排序        是否稳定         最好   最坏   平均
冒泡排序        是                       是              O(n)    O(n^2)  O(n^2)
插入排序        是                       是              O(n)    O(n^2)  O(n^2)
选择排序       是                        是              O(n^2)  O(n^2) O(n^2)




